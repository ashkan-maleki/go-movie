version: '3.7'


services:
  portainer:
    container_name: portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  agent:
    container_name: consul-agent
    ports:
      - "8500:8500"
#      - "8600:8600/tcp"
      - "8600:8600/udp"
    command: "agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0"

  zoo1:
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

  db:
    container_name: db
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=movie
      - MYSQL_ROOT_PASSWORD=mauFJcuf5dhRMQrjj
    ports:
      - '3306:3306'
    volumes:
      - db:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  jaeger:
    container_name: jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411

  prometheus:
    container_name: prometheus
    ports:
      - "9090:9090"

    volumes:
      - ./configs/:/etc/prometheus/
#      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus

    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  alertmanager:
    container_name: alert-manager
    ports:
      - "9093:9093"
    volumes:
      - ./configs/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yaml'
      - '--storage.path=/alertmanager'

  grafana:
    container_name: grafana
    ports:
      - "3000:3000"


  metadata:
    container_name: metadata
    hostname: metadata
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        service: metadata
    expose:
      - '8081'
    environment:
      ENVIRONMENT: development
      CONFIG_FILE: "movie/base.yaml"
      SERVICE_DISCOVERY_URL: "consul-agent:8500"
    depends_on:
      - db
      - agent
      - zoo1
      - kafka1
    command: [ "/movie/service" ]

  movie:
    container_name: movie
    hostname: movie
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        service: movie
    expose:
      - '8083'
    environment:
      ENVIRONMENT: development
      CONFIG_FILE: "movie/base.yaml"
      SERVICE_DISCOVERY_URL: "consul-agent:8500"
    depends_on:
      - db
      - agent
      - zoo1
      - kafka1
    command: [ "/movie/service" ]

  rating:
    container_name: rating
    hostname: rating
    build:
      context: .
      dockerfile: docker/Dockerfile-csg-enabled
      args:
        service: rating
    expose:
      - '8082'
    environment:
      ENVIRONMENT: development
      CONFIG_FILE: "movie/base.yaml"
      SERVICE_DISCOVERY_URL: "consul-agent:8500"
      KAFKA_ADDRESS: "kafka1:19092"
    depends_on:
      - db
      - agent
      - zoo1
      - kafka1
    command: [ "/movie/service" ]




